{"openapi":"3.0.2","info":{"title":"EcoTaxa","version":"0.0.2"},"paths":{"/login":{"post":{"tags":["authentification"],"summary":"Login","description":"Just for description. The _real_ login is done in legacy code via flask.","operationId":"login_login_post","parameters":[{"required":true,"schema":{"title":"Username","type":"string"},"name":"username","in":"query"},{"required":true,"schema":{"title":"Password","type":"string"},"name":"password","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users":{"get":{"tags":["users"],"summary":"Get Users","description":"Return the list of users.","operationId":"get_users_users_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get Users Users Get","type":"array","items":{"$ref":"#/components/schemas/User"}}}}}},"security":[{"HTTPBearer":[]}]}},"/users/me":{"get":{"tags":["users"],"summary":"Show Current User","description":"Return currently authenticated user.","operationId":"show_current_user_users_me_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}}},"security":[{"HTTPBearer":[]}]}},"/users/search":{"get":{"tags":["users"],"summary":"Search User","description":"Search users using various criteria, search is case insensitive and might contain % chars.","operationId":"search_user_users_search_get","parameters":[{"required":false,"schema":{"title":"By Name","type":"string"},"name":"by_name","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Search User Users Search Get","type":"array","items":{"$ref":"#/components/schemas/User"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/projects/search":{"get":{"tags":["projects"],"summary":"Search Projects","description":"Return projects summary for current user.\n@:param also_others: allows to return projects for which given user has no right\n@:param for_managing: Allows to return project that can be written to (including erased) by the given user","operationId":"search_projects_projects_search_get","parameters":[{"required":false,"schema":{"title":"Also Others","type":"boolean","default":false},"name":"also_others","in":"query"},{"required":false,"schema":{"title":"For Managing","type":"boolean","default":false},"name":"for_managing","in":"query"},{"required":false,"schema":{"title":"Title Filter","type":"string","default":""},"name":"title_filter","in":"query"},{"required":false,"schema":{"title":"Instrument Filter","type":"string","default":""},"name":"instrument_filter","in":"query"},{"required":false,"schema":{"title":"Filter Subset","type":"boolean","default":false},"name":"filter_subset","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Search Projects Projects Search Get","type":"array","items":{"$ref":"#/components/schemas/ProjectSearchResult"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/projects/create":{"post":{"tags":["projects"],"summary":"Create Project","description":"Create an empty project with only a title, and return its number.\nThe project will be managed by current user.\nThe user has to be app administrator or project creator.","operationId":"create_project_projects_create_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateProjectReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Create Project Projects Create Post","type":"integer"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/projects/{project_id}/subset":{"post":{"tags":["projects"],"summary":"Project Subset","description":"Subset a project into another one.","operationId":"project_subset_projects__project_id__subset_post","parameters":[{"required":true,"schema":{"title":"Project Id","type":"integer"},"name":"project_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubsetReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SubsetRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/projects/{project_id}/merge":{"post":{"tags":["projects"],"summary":"Project Merge","description":"Merge another project into this one. It's more a phagocytosis than a merge, as the source will see\nall its objects gone and will be erased.\n- param `dry_run`: If set, then only a diagnostic of doability will be done.","operationId":"project_merge_projects__project_id__merge_post","parameters":[{"required":true,"schema":{"title":"Project Id","type":"integer"},"name":"project_id","in":"path"},{"required":true,"schema":{"title":"Source Project Id","type":"integer"},"name":"source_project_id","in":"query"},{"required":true,"schema":{"title":"Dry Run","type":"boolean"},"name":"dry_run","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MergeRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/projects/{project_id}/check":{"get":{"tags":["projects"],"summary":"Project Check","description":"Check consistency of a project.","operationId":"project_check_projects__project_id__check_get","parameters":[{"required":true,"schema":{"title":"Project Id","type":"integer"},"name":"project_id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/import_prep/{project_id}":{"post":{"tags":["projects"],"summary":"Import Preparation","description":"Prepare/validate the import of an EcoTaxa archive or directory.","operationId":"import_preparation_import_prep__project_id__post","parameters":[{"required":true,"schema":{"title":"Project Id","type":"integer"},"name":"project_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportPrepReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportPrepRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/import_real/{project_id}":{"post":{"tags":["projects"],"summary":"Real Import","description":"Import an EcoTaxa archive or directory.","operationId":"real_import_import_real__project_id__post","parameters":[{"required":true,"schema":{"title":"Project Id","type":"integer"},"name":"project_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportRealReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportRealRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/simple_import/{project_id}":{"post":{"tags":["projects"],"summary":"Simple Import","description":"Import images only, with same metadata for all.","operationId":"simple_import_simple_import__project_id__post","parameters":[{"required":true,"schema":{"title":"Project Id","type":"integer"},"name":"project_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SimpleImportReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SimpleImportRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/export/emodnet":{"post":{"tags":["WIP"],"summary":"Emodnet Format Export","description":"Export in EMODnet format, @see https://www.emodnet-ingestion.eu/\nProduces a DwC-A archive into a temporary directory, ready for download.\nhttps://python-dwca-reader.readthedocs.io/en/latest/index.html","operationId":"emodnet_format_export_export_emodnet_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EMODNetExportReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EMODNetExportRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/status":{"get":{"tags":["WIP"],"summary":"System Status","description":"Report the status, mainly used for verifying that the server is up.","operationId":"system_status_status_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}},"security":[{"HTTPBearer":[]}]}}},"components":{"schemas":{"CreateProjectReq":{"title":"CreateProjectReq","required":["title"],"type":"object","properties":{"clone_of_id":{"title":"If set, clone specified Project","type":"integer"},"title":{"title":"The project title","type":"string"},"visible":{"title":"The project is created visible","type":"boolean","default":true}}},"EMLAdditionalMeta":{"title":"EMLAdditionalMeta","required":["dateStamp"],"type":"object","properties":{"dateStamp":{"title":"Datestamp","type":"string"},"metadataLanguage":{"title":"Title language, ISO-639.2","type":"string","default":"eng"},"citation":{"title":"Citation","type":"string"},"bibliography":{"title":"Bibliography","type":"string"},"resourceLogoUrl":{"title":"Resourcelogourl","type":"string"},"parentCollectionIdentifier":{"title":"Parentcollectionidentifier","type":"string"},"collectionIdentifier":{"title":"Collectionidentifier","type":"string"},"formationPeriod":{"title":"Formationperiod","type":"string"},"livingTimePeriod":{"title":"Livingtimeperiod","type":"string"},"specimenPreservationMethod":{"title":"Specimenpreservationmethod","type":"string"}},"description":"EML additional metadata"},"EMLAssociatedPerson":{"title":"EMLAssociatedPerson","required":["organizationName","positionName","country"],"type":"object","properties":{"givenName":{"title":"Givenname","type":"string"},"surName":{"title":"Surname","type":"string"},"organizationName":{"title":"Organizationname","type":"string"},"positionName":{"title":"Positionname","type":"string"},"deliveryPoint":{"title":"Deliverypoint","type":"string"},"city":{"title":"City","type":"string"},"administrativeArea":{"title":"Administrativearea","type":"string"},"postalCode":{"title":"Postalcode","type":"string"},"country":{"title":"Country","type":"string"},"phone":{"title":"Phone","type":"string"},"electronicMailAddress":{"title":"Electronicmailaddress","type":"string"},"onlineUrl":{"title":"Onlineurl","type":"string"},"userID":{"title":"Userid","type":"string"},"role":{"title":"Role","type":"string"}},"description":"A person for EML metadata."},"EMLGeoCoverage":{"title":"EMLGeoCoverage","required":["geographicDescription","westBoundingCoordinate","eastBoundingCoordinate","northBoundingCoordinate","southBoundingCoordinate"],"type":"object","properties":{"geographicDescription":{"title":"Geographicdescription","type":"string"},"westBoundingCoordinate":{"title":"Westboundingcoordinate","type":"string"},"eastBoundingCoordinate":{"title":"Eastboundingcoordinate","type":"string"},"northBoundingCoordinate":{"title":"Northboundingcoordinate","type":"string"},"southBoundingCoordinate":{"title":"Southboundingcoordinate","type":"string"}},"description":"EML metadata coverage - geographic"},"EMLKeywordSet":{"title":"EMLKeywordSet","required":["keywords","keywordThesaurus"],"type":"object","properties":{"keywords":{"title":"Keywords","type":"array","items":{"type":"string"}},"keywordThesaurus":{"title":"Keywordthesaurus","type":"string"}},"description":"EML keyword set\nRelevant keywords facilitate the discovery of a dataset. An indication of the represented functional groups\ncan help in a general search (e.g. plankton, benthos, zooplankton, phytoplankton, macrobenthos, meiobenthos …).\nAssigned keywords can be related to taxonomy, habitat, geography or relevant keywords extracted from thesauri\nsuch as the ASFA thesaurus, the CAB thesaurus or GCMD keywords."},"EMLMeta":{"title":"EMLMeta","required":["titles","creators","metadataProviders","associatedParties","contacts","pubDate","abstract","keywordSet","geographicCoverage","temporalCoverage","taxonomicCoverage","intellectualRights","additionalMetadata"],"type":"object","properties":{"titles":{"title":"Titles, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLTitle"}},"creators":{"title":"Creators, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLPerson"}},"metadataProviders":{"title":"Metadata providers, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLPerson"}},"associatedParties":{"title":"Associated parties, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLAssociatedPerson"}},"contacts":{"title":"Contacts, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLPerson"}},"pubDate":{"title":"Pubdate","type":"string"},"language":{"title":"Resource language, ISO-639.2","type":"string","default":"eng"},"abstract":{"title":"Paragraphs forming the abstract","minItems":1,"type":"array","items":{"type":"string"}},"keywordSet":{"$ref":"#/components/schemas/EMLKeywordSet"},"additionalInfo":{"title":"Additionalinfo","type":"string"},"geographicCoverage":{"$ref":"#/components/schemas/EMLGeoCoverage"},"temporalCoverage":{"$ref":"#/components/schemas/EMLTemporalCoverage"},"generalTaxonomicCoverage":{"title":"Generaltaxonomiccoverage","type":"string"},"taxonomicCoverage":{"title":"Taxonomiccoverage","type":"array","items":{"$ref":"#/components/schemas/EMLTaxonomicClassification"}},"intellectualRights":{"title":"Intellectualrights","type":"string"},"purpose":{"title":"Purpose","type":"string"},"methods":{"$ref":"#/components/schemas/EMLMethod"},"project":{"$ref":"#/components/schemas/EMLProject"},"maintenanceUpdateFrequency":{"title":"Maintenanceupdatefrequency","type":"string"},"maintenance":{"title":"Maintenance","type":"string"},"additionalMetadata":{"$ref":"#/components/schemas/EMLAdditionalMeta"}},"description":"EML metadata"},"EMLMethod":{"title":"EMLMethod","required":["methodStep","sampling","studyExtent","samplingDescription"],"type":"object","properties":{"methodStep":{"title":"Methodstep","type":"string"},"sampling":{"title":"Sampling","type":"string"},"studyExtent":{"title":"Studyextent","type":"string"},"samplingDescription":{"title":"Samplingdescription","type":"string"}},"description":"EML method - unused"},"EMLPerson":{"title":"EMLPerson","required":["organizationName","positionName","country"],"type":"object","properties":{"givenName":{"title":"Givenname","type":"string"},"surName":{"title":"Surname","type":"string"},"organizationName":{"title":"Organizationname","type":"string"},"positionName":{"title":"Positionname","type":"string"},"deliveryPoint":{"title":"Deliverypoint","type":"string"},"city":{"title":"City","type":"string"},"administrativeArea":{"title":"Administrativearea","type":"string"},"postalCode":{"title":"Postalcode","type":"string"},"country":{"title":"Country","type":"string"},"phone":{"title":"Phone","type":"string"},"electronicMailAddress":{"title":"Electronicmailaddress","type":"string"},"onlineUrl":{"title":"Onlineurl","type":"string"},"userID":{"title":"Userid","type":"string"}},"description":"A person for EML metadata."},"EMLProject":{"title":"EMLProject","required":["title","personnel"],"type":"object","properties":{"title":{"title":"Title","type":"string"},"identifier":{"title":"Identifier","type":"string"},"personnel":{"title":"Personnel","type":"array","items":{"$ref":"#/components/schemas/EMLAssociatedPerson"}},"description":{"title":"Description","type":"string"},"funding":{"title":"Funding","type":"string"},"studyAreaDescription":{"title":"Studyareadescription","type":"string"},"designDescription":{"title":"Designdescription","type":"string"},"qualityControl":{"title":"Qualitycontrol","type":"string"}},"description":"EML method - unused"},"EMLTaxonomicClassification":{"title":"EMLTaxonomicClassification","required":["taxonRankName","taxonRankValue"],"type":"object","properties":{"taxonRankName":{"title":"Taxonrankname","type":"string"},"taxonRankValue":{"title":"Taxonrankvalue","type":"string"},"commonName":{"title":"Commonname","type":"string"}},"description":"EML metadata coverage - taxonomic"},"EMLTemporalCoverage":{"title":"EMLTemporalCoverage","type":"object","properties":{"singleDateTime":{"title":"Singledatetime","type":"string"},"beginDate":{"title":"Begindate","type":"string"},"endDate":{"title":"Enddate","type":"string"}},"description":"EML metadata coverage - temporal\n Use ISO 8601"},"EMLTitle":{"title":"EMLTitle","required":["title"],"type":"object","properties":{"title":{"title":"Descriptive title(s) - not too short","type":"string"},"lang":{"title":"Title language, ISO-639.2","type":"string","default":"eng"}},"description":"EML title with optional lang."},"EMODNetExportReq":{"title":"EMODNetExportReq","required":["meta","project_ids"],"type":"object","properties":{"meta":{"$ref":"#/components/schemas/EMLMeta"},"project_ids":{"title":"The projects to export","minItems":1,"type":"array","items":{"type":"integer"}}},"description":"EMODNet format export request."},"EMODNetExportRsp":{"title":"EMODNetExportRsp","required":["task_id"],"type":"object","properties":{"task_id":{"title":"The created task","type":"integer"}},"description":"EMODNet format export response."},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"ImportPrepReq":{"title":"ImportPrepReq","required":["task_id","source_path"],"type":"object","properties":{"task_id":{"title":"The existing task to use","type":"integer"},"source_path":{"title":"Source path on server, to zip or plain directory","type":"string"},"taxo_mappings":{"title":"Optional taxonomy mapping","type":"object","additionalProperties":{"type":"string"},"default":{}},"skip_loaded_files":{"title":"Skip Loaded Files","type":"boolean","default":false},"skip_existing_objects":{"title":"Skip Existing Objects","type":"boolean","default":false},"update_mode":{"title":"Update data ('Yes'), including classification ('Cla')","type":"string","default":""}},"description":"Import preparation, request. "},"ImportPrepRsp":{"title":"ImportPrepRsp","required":["source_path"],"type":"object","properties":{"source_path":{"title":"Eventually amended source path on server","type":"string"},"mappings":{"title":"Fields mapping","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}},"default":{}},"found_users":{"title":"Users found in TSV files","type":"object","additionalProperties":{"type":"object"},"description":"key = user name; value = dict with (key = 'id' if resolved, else 'email')","default":{}},"found_taxa":{"title":"Taxa found without ID in TSV files","type":"object","additionalProperties":{"type":"integer"},"description":"key = taxon NAME; value = taxon ID if resolved, else None","default":{}},"warnings":{"title":"Warnings from analysis","type":"array","items":{"type":"string"},"default":[]},"errors":{"title":"Errors from analysis","type":"array","items":{"type":"string"},"description":"Do NOT proceed to real import if not empty.","default":[]},"rowcount":{"title":"Number of TSV rows, counted during validation","type":"integer","default":0}},"description":"Import preparation, response. "},"ImportRealReq":{"title":"ImportRealReq","required":["task_id","source_path"],"type":"object","properties":{"task_id":{"title":"The existing task to use","type":"integer"},"source_path":{"title":"Source path on server, to plain directory","type":"string"},"taxo_mappings":{"title":"Optional taxonomy mapping","type":"object","additionalProperties":{"type":"string"},"default":{}},"skip_loaded_files":{"title":"Skip Loaded Files","type":"boolean","default":false},"skip_existing_objects":{"title":"Skip Existing Objects","type":"boolean","default":false},"update_mode":{"title":"Update data ('Yes'), including classification ('Cla')","type":"string","default":""},"mappings":{"title":"Fields mapping","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}},"default":{}},"found_users":{"title":"Users found in TSV files","type":"object","additionalProperties":{"type":"object"},"description":"key = user name; value = dict with (key = 'id' if resolved, else 'email')","default":{}},"found_taxa":{"title":"Taxa found in TSV files","type":"object","additionalProperties":{"type":"integer"},"description":"key = taxon NAME; value = taxon ID if resolved, else None","default":{}},"rowcount":{"title":"Number of TSV rows, counted during validation","type":"integer","default":0}},"description":"Import for real, request. "},"ImportRealRsp":{"title":"ImportRealRsp","type":"object","properties":{},"description":"Import for real, response. "},"MergeRsp":{"title":"MergeRsp","type":"object","properties":{"errors":{"title":"The errors found during processing.","type":"array","items":{"type":"string"},"default":[]}},"description":"Merge response. "},"ProjectSearchResult":{"title":"ProjectSearchResult","required":["projid","title","status","objcount","pctvalidated","pctclassified","visible"],"type":"object","properties":{"projid":{"title":"Projid","type":"integer"},"title":{"title":"Title","type":"string"},"status":{"title":"Status","type":"string"},"objcount":{"title":"Objcount","type":"integer"},"pctvalidated":{"title":"Pctvalidated","type":"number"},"pctclassified":{"title":"Pctclassified","type":"number"},"email":{"title":"Email","type":"string"},"name":{"title":"Name","type":"string"},"visible":{"title":"Visible","type":"boolean"}}},"SimpleImportReq":{"title":"SimpleImportReq","required":["task_id","source_path","values"],"type":"object","properties":{"task_id":{"title":"The existing task to use, if 0 then it's a dry run","type":"integer"},"source_path":{"title":"Source path on server, to zip or plain directory","type":"string"},"values":{"title":"Constant values, per field, to write for all images.","type":"object","additionalProperties":{"type":"string"},"description":":imgdate, imgtime, latitude, longitude, depthmin, depthmax, taxolb, userlb, status"},"possible_values":{"title":"Possible Values","type":"array","items":{"type":"string"},"default":["imgdate","imgtime","latitude","longitude","depthmin","depthmax","taxolb","userlb","status"]}},"description":"Simple Import preparation, request. "},"SimpleImportRsp":{"title":"SimpleImportRsp","required":["errors","nb_images"],"type":"object","properties":{"errors":{"title":"Validation, copy or insert errors","type":"array","items":{"type":"string"}},"nb_images":{"title":"Number of successfully imported images","type":"integer"}},"description":"Simple Import, response. "},"SubsetReq":{"title":"SubsetReq","required":["task_id","dest_prj_id","limit_type","limit_value","do_images"],"type":"object","properties":{"task_id":{"title":"The existing task to use.","type":"integer"},"filters":{"title":"The filters to apply to project","type":"object","additionalProperties":{"type":"string"},"default":{}},"dest_prj_id":{"title":"The destination project ID.","type":"integer"},"limit_type":{"title":"The type of limit_value: P for %, V for constant, both per category.","enum":["P","V"],"type":"string"},"limit_value":{"title":"Limit value, e.g. 20% or 5 per copepoda.","type":"number"},"do_images":{"title":"If set, also clone images.","type":"boolean"}},"description":"Subset request. "},"SubsetRsp":{"title":"SubsetRsp","type":"object","properties":{"errors":{"title":"The errors found during processing","type":"array","items":{"type":"string"},"default":[]}},"description":"Subset response. "},"User":{"title":"User","required":["email","name"],"type":"object","properties":{"id":{"title":"Id","type":"integer"},"email":{"title":"Email","type":"string"},"password":{"title":"Password","type":"string"},"name":{"title":"Name","type":"string"},"organisation":{"title":"Organisation","type":"string"},"active":{"title":"Active","type":"boolean"},"preferences":{"title":"Preferences","type":"string"},"country":{"title":"Country","type":"string"},"usercreationdate":{"title":"Usercreationdate","type":"string","format":"date-time"},"usercreationreason":{"title":"Usercreationreason","type":"string"}}},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"type":"string"}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}},"securitySchemes":{"HTTPBearer":{"type":"http","scheme":"bearer"}}}}