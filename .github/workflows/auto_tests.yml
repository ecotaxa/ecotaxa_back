# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  push:
  pull_request:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    environment: Env_for_Actions
    # The type of runner that the job will run on
    runs-on: [ubuntu-latest]
    # Container with libs (no src)
    container: ubuntu:22.04

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: pgvector/pgvector:pg14
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres12
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5           
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # node is needed by python & codecov actions
    - run: apt-get update
    - run: apt-get install -y curl
    - run: curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
    - run: apt-get install -y nodejs
    # codecov needs git
    - run: apt-get install -y git
    # We use psql to build the test DB
    - run: apt-get install -y postgresql-client
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    - run: pip install tox==3.24.3
    # Run both tests and coverage
    - name: Run tox in QA
      working-directory: ./QA/py
      run: |
        PATH=/venv/bin:$PATH PYTHONPATH=$PYTHONPATH:. tox
      env:
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: postgres
        # The default PostgreSQL port
        POSTGRES_PORT: 5432
    - name: Upload coverage report
      uses: codecov/codecov-action@v4
      with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true # optional (default = false)
