# To ensure all is installed and only them:
# (venv)$ pip freeze | xargs pip uninstall -y
# (venv)$ pip install -r requirements.txt

# Typings there depend on SQLA 2.0 interface
SQLAlchemy[mypy]==1.4.31
# sqlalchemy2-stubs are now installed with [mypy] above
sqlalchemy_views==0.3.1
# When SQLAlchemy moves to 2.0 we'll be able to use psycopg3
#psycopg[binary]==3.0.8
psycopg2-binary==2.9.3
# Pillow needs manual testing
# mac: brew install libjpeg
Pillow==8.1.0
# astral needs pytz
astral==2.2
pytz==2021.1
types-pytz==2021.1.2
# Needed by TF EXACTLY, but only in GPU back -end
# the main back-end uses numpy for image processing, any recent version will do.
numpy~=1.19.2
# Backbone of the app
fastapi==0.73.0
fastapi-utils==0.2.1
# Pin a recent (as of Jan 2022) pydantic
pydantic==1.9.0
# Speed up openapi response serialization
orjson==3.6.6
types-orjson==3.6.2
#graphene==2.1.8
uvloop==0.16.0
httptools==0.2.0
# With 0.16.0: Error "INFO:     ASGI 'lifespan' protocol appears unsupported." and the process
# does not exit. Seen with 0.15.0 as well.
# Note: there was a reg. in 0.17.0 with file upload, not visible during UT. So, to test manually.
uvicorn==0.17.4
gunicorn==20.1.0
httpx==0.18.1
lxml==4.9.1
lxml-stubs==0.2.0
requests==2.26.0
types-requests==2.25.6
python-multipart==0.0.5
# Auth validation
itsdangerous==2.0.1
passlib==1.7.4
# A bit of html
jinja2==3.0.1
aiofiles==0.7.0
# Analyzis of XLSX data sources
openpyxl==3.0.9
openpyxl-stubs==0.1.21
# Image processing libs.
# Machine learning with no GPU
scikit-learn==1.0
# Machine learning with GPU. NOT automatically regression-tested so to upgrade with caution.
#tensorflow==2.6.0
#tensorflow-hub==0.12.0
#tensorflow_addons==0.14.0
# Used same place as TF, CNN generation
#pandas==1.3.3
##lycon==0.2.0 # Conflicts with the version required by TF
#opencv-python-headless==4.5.3.56
#imgaug==0.4.0
# DB upgrade
alembic==1.7.5
# CLI tools, for "cmds" subdirectory
typer[all]==0.4.0
# https://github.com/tiangolo/typer/issues/377
click==8.0.4
# More recent mypy
mypy==0.940
