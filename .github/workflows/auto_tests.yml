# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  test:
    # The type of runner that the job will run on
    runs-on: [ubuntu-latest]
    # Container with libs (no src)
    container: grololo06/ecotaxa:latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres12
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5           
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Run both tests and coverage
    - name: Run pytest in QA
      working-directory: ./QA/py
      run: |
        PYTHONPATH=../../py coverage run --source=../../py -m pytest
      env:
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: postgres
        # The default PostgreSQL port
        POSTGRES_PORT: 5432
    - name: Compute coverage
      working-directory: ./QA/py
      run: |
        coverage report
    - name: codecov.io
      working-directory: ./QA/py
      run : |
        curl -s https://codecov.io/bash > .codecov
        chmod +x .codecov
        ./.codecov -t 47ba06e8-dd1e-4aa7-b2b9-d492555233fa
        
