"""empty message

Revision ID: a173f0289de1
Revises: beaa3e8e4033
Create Date: 2022-02-22 10:08:08.029594

"""

# revision identifiers, used by Alembic.
revision = "a173f0289de1"
down_revision = "beaa3e8e4033"

import sqlalchemy as sa
from alembic import op

_remove_useless_privs = """
    delete from projectspriv where member is null;
"""

_dedup_acquis_orig_id = """
update acquisitions acq 
set orig_id = orig_id || '_' || (select count(1) from acquisitions acq2 
where acq2.acq_sample_id = acq.acq_sample_id and acq2.orig_id = acq.orig_id and acq2.acquisid <= acq.acquisid)
where exists (select 1 from acquisitions acq2 
where acq2.acq_sample_id = acq.acq_sample_id and acq2.orig_id = acq.orig_id and acq2.acquisid != acq.acquisid);
"""


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('dbplyr_001')
    # op.drop_table('dbplyr_002')
    # op.drop_table('dbplyr_003')
    # op.drop_table('dbplyr_004')
    # op.drop_table('dbplyr_005')
    # op.drop_table('dbplyr_006')
    # op.drop_table('dbplyr_007')

    op.drop_index("IS_TempTaxoIdFinal", table_name="temp_taxo")
    op.drop_index("IS_TempTaxoParent", table_name="temp_taxo")
    op.drop_table("temp_taxo")

    op.drop_table("part_histopart_det")
    op.drop_table("part_projects_res")
    op.drop_index("is_part_samples_prj", table_name="part_samples")
    op.drop_index("is_part_samples_sampleid", table_name="part_samples")
    op.drop_table("part_histopart_reduit")
    op.drop_table("part_histocat_lst")
    op.drop_index("is_part_projects_projid", table_name="part_projects")
    op.drop_table("part_ctd")
    op.drop_table("part_histocat")
    op.drop_table("part_samples")
    op.drop_table("part_projects")

    op.alter_column("samples", "projid", existing_type=sa.INTEGER(), nullable=False)

    # Deduplicate before unicity
    op.execute(_dedup_acquis_orig_id)
    op.create_index(
        "IS_AcquisOrigId", "acquisitions", ["acq_sample_id", "orig_id"], unique=True
    )

    # TODO: Why? no real diff here.
    # op.drop_constraint('obj_head_acquisid_fkey', 'obj_head', type_='foreignkey')
    # op.create_foreign_key('obj_head_acquisid_fkey', 'obj_head', 'acquisitions', ['acquisid'], ['acquisid'])

    # Clean member which is null in 1 line
    op.execute(_remove_useless_privs)
    op.alter_column(
        "projectspriv", "member", existing_type=sa.INTEGER(), nullable=False
    )
    op.drop_constraint("projectspriv_member_fkey", "projectspriv", type_="foreignkey")
    op.create_foreign_key(
        None, "projectspriv", "users", ["member"], ["id"], ondelete="CASCADE"
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    raise
    # ### end Alembic commands ###
