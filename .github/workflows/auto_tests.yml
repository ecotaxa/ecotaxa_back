# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  test:
    # The type of runner that the job will run on
    runs-on: [ubuntu-latest]
    # Container for postgres
    container: ubuntu:18.04

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres12
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5           
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    # Try pip cache first
    #- uses: actions/cache@v1
    #  with:
    #    path: ~/.cache/pip
    #    key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    #    restore-keys: |
    #      ${{ runner.os }}-pip-    # Base python setup
    # Setup should speed up
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.6'
    - name: Install common pip
      run: python -m pip install --upgrade pip
    - name: Install backend dependencies
      working-directory: ./py
      run: |
        pip install -r requirements.txt
    - name: Install QA dependencies
      working-directory: ./QA/py
      run: |
        pip install -r requirements.txt
    # Run both tests and coverage
    - name: Run pytest in QA
      working-directory: ./QA/py
      run: |
        PYTHONPATH=../../py coverage run --source=../../py -m pytest
      env:
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: postgres
        # The default PostgreSQL port
        POSTGRES_PORT: 5432
    - name: Compute coverage
      working-directory: ./QA/py
      run: |
        coverage report

    # Runs a set of commands using the runners shell
    #- name: Run a multi-line script
    #  run: |
    #    echo Add other actions to build,
    #    echo test, and deploy your project.
