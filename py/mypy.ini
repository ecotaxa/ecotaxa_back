[mypy]
plugins = pydantic.mypy, sqlalchemy.ext.mypy.plugin
files = API_models,API_operations,BG_operations,BO,cmds,data,formats,FS,ML,helpers,providers,
        main.py,run.py
#strict = True
#implicit_reexport = True

# Common typing issues:
# case1: no .rowcount in executed queries (SQLAlchemy typings issue).
# case2: DB model fields do not get typed correctly as columns. It's the underlying Python type instead (SQLAlchemy typings issue).
# case3: SQLAlchemy2Pydantic output is not correctly fully typed. Too dynamic.
# case4: SQLAlchemy Row (from Result iter) is not typed an a Mapping (when it _is_, keys being query columns) (SQLAlchemy typings issue)
# case5: no .description in cursors (SQLAlchemy typings issue).
# case6: no typing stub or typing in lib
# case7: dataclass_to_model is not a class. Should be transformed into a Generic like SQLAlchemy2Pydantic does. TODO
[mypy-uvicorn.*]
ignore_missing_imports = True
[mypy-gunicorn.*]
ignore_missing_imports = True
[mypy-numpy.*]
ignore_missing_imports = True
[mypy-tensorflow.*]
ignore_missing_imports = True
[mypy-tensorflow_addons.*]
ignore_missing_imports = True
[mypy-tensorflow_hub.*]
ignore_missing_imports = True
[mypy-cv2.*]
ignore_missing_imports = True
[mypy-imgaug.*]
ignore_missing_imports = True
[mypy-sklearn.*]
ignore_missing_imports = True
