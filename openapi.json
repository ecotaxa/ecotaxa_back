{"openapi":"3.0.2","info":{"title":"EcoTaxa","version":"0.0.1"},"paths":{"/taxon/resolve/{our_id}":{"get":{"summary":"Api Resolve Taxon","description":"Resolve in WoRMs the given taxon.","operationId":"api_resolve_taxon_taxon_resolve__our_id__get","parameters":[{"required":true,"schema":{"title":"Our Id","type":"integer"},"name":"our_id","in":"path"},{"required":false,"schema":{"title":"T"},"name":"t","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/import_prep/{project_id}":{"post":{"summary":"Api Import","description":"Prepare/validate the import of an EcoTaxa archive or directory.","operationId":"api_import_import_prep__project_id__post","parameters":[{"required":true,"schema":{"title":"Project Id","type":"integer"},"name":"project_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportPrepReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportPrepRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/import_real/{project_id}":{"post":{"summary":"Api Import","description":"Import an EcoTaxa archive or directory.","operationId":"api_import_import_real__project_id__post","parameters":[{"required":true,"schema":{"title":"Project Id","type":"integer"},"name":"project_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportRealReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ImportRealRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/simple_import/{project_id}":{"post":{"summary":"Api Import","description":"Import images only, with same metadata for all.","operationId":"api_import_simple_import__project_id__post","parameters":[{"required":true,"schema":{"title":"Project Id","type":"integer"},"name":"project_id","in":"path"}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SimpleImportReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SimpleImportRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/export/emodnet":{"post":{"summary":"Api Export Emodnet","description":"Export in EMODnet format, @see https://www.emodnet-ingestion.eu/\nProduces a DwC-A archive into a temporary directory, ready for download.\nhttps://python-dwca-reader.readthedocs.io/en/latest/index.html","operationId":"api_export_emodnet_export_emodnet_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EMODNetExportReq"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/EMODNetExportRsp"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/status":{"get":{"summary":"Api Status","description":"Import an EcoTaxa archive or directory.","operationId":"api_status_status_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"EMLAssociatedPerson":{"title":"EMLAssociatedPerson","required":["organizationName","positionName","country"],"type":"object","properties":{"givenName":{"title":"Givenname","type":"string"},"surName":{"title":"Surname","type":"string"},"organizationName":{"title":"Organizationname","type":"string"},"positionName":{"title":"Positionname","type":"string"},"deliveryPoint":{"title":"Deliverypoint","type":"string"},"city":{"title":"City","type":"string"},"administrativeArea":{"title":"Administrativearea","type":"string"},"postalCode":{"title":"Postalcode","type":"string"},"country":{"title":"Country","type":"string"},"phone":{"title":"Phone","type":"string"},"electronicMailAddress":{"title":"Electronicmailaddress","type":"string"},"onlineUrl":{"title":"Onlineurl","type":"string"},"userID":{"title":"Userid","type":"string"},"role":{"title":"Role","type":"string"}},"description":"A person for EML metadata."},"EMLGeoCoverage":{"title":"EMLGeoCoverage","required":["geographicDescription","westBoundingCoordinate","eastBoundingCoordinate","northBoundingCoordinate","southBoundingCoordinate"],"type":"object","properties":{"geographicDescription":{"title":"Geographicdescription","type":"string"},"westBoundingCoordinate":{"title":"Westboundingcoordinate","type":"string"},"eastBoundingCoordinate":{"title":"Eastboundingcoordinate","type":"string"},"northBoundingCoordinate":{"title":"Northboundingcoordinate","type":"string"},"southBoundingCoordinate":{"title":"Southboundingcoordinate","type":"string"}},"description":"EML metadata coverage - geographic"},"EMLKeywordSet":{"title":"EMLKeywordSet","required":["keywords","keywordThesaurus"],"type":"object","properties":{"keywords":{"title":"Keywords","type":"array","items":{"type":"string"}},"keywordThesaurus":{"title":"Keywordthesaurus","type":"string"}},"description":"EML keyword set\nRelevant keywords facilitate the discovery of a dataset. An indication of the represented functional groups\ncan help in a general search (e.g. plankton, benthos, zooplankton, phytoplankton, macrobenthos, meiobenthos â€¦).\nAssigned keywords can be related to taxonomy, habitat, geography or relevant keywords extracted from thesauri\nsuch as the ASFA thesaurus, the CAB thesaurus or GCMD keywords."},"EMLMeta":{"title":"EMLMeta","required":["titles","creators","metadataProviders","associatedParties","contacts","pubDate","abstract","keywordSet","geographicCoverage","temporalCoverage","taxonomicCoverage","intellectualRights"],"type":"object","properties":{"titles":{"title":"Titles, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLTitle"}},"creators":{"title":"Creators, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLPerson"}},"metadataProviders":{"title":"Metadata providers, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLPerson"}},"associatedParties":{"title":"Associated parties, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLAssociatedPerson"}},"contacts":{"title":"Contacts, at least 1","minItems":1,"type":"array","items":{"$ref":"#/components/schemas/EMLPerson"}},"pubDate":{"title":"Pubdate","type":"string"},"language":{"title":"Resource language, ISO-639.2","type":"string","default":"eng"},"abstract":{"title":"Paragraphs forming the abstract","minItems":1,"type":"array","items":{"type":"string"}},"keywordSet":{"$ref":"#/components/schemas/EMLKeywordSet"},"additionalInfo":{"title":"Additionalinfo","type":"string"},"geographicCoverage":{"$ref":"#/components/schemas/EMLGeoCoverage"},"temporalCoverage":{"$ref":"#/components/schemas/EMLTemporalCoverage"},"generalTaxonomicCoverage":{"title":"Generaltaxonomiccoverage","type":"string"},"taxonomicCoverage":{"title":"Taxonomiccoverage","type":"array","items":{"$ref":"#/components/schemas/EMLTaxonomicClassification"}},"intellectualRights":{"title":"Intellectualrights","type":"string"},"purpose":{"title":"Purpose","type":"string"},"methods":{"$ref":"#/components/schemas/EMLMethod"},"project":{"$ref":"#/components/schemas/EMLProject"},"maintenanceUpdateFrequency":{"title":"Maintenanceupdatefrequency","type":"string"},"maintenance":{"title":"Maintenance","type":"string"}},"description":"EML metadata"},"EMLMethod":{"title":"EMLMethod","required":["methodStep","sampling","studyExtent","samplingDescription"],"type":"object","properties":{"methodStep":{"title":"Methodstep","type":"string"},"sampling":{"title":"Sampling","type":"string"},"studyExtent":{"title":"Studyextent","type":"string"},"samplingDescription":{"title":"Samplingdescription","type":"string"}},"description":"EML method - unused"},"EMLPerson":{"title":"EMLPerson","required":["organizationName","positionName","country"],"type":"object","properties":{"givenName":{"title":"Givenname","type":"string"},"surName":{"title":"Surname","type":"string"},"organizationName":{"title":"Organizationname","type":"string"},"positionName":{"title":"Positionname","type":"string"},"deliveryPoint":{"title":"Deliverypoint","type":"string"},"city":{"title":"City","type":"string"},"administrativeArea":{"title":"Administrativearea","type":"string"},"postalCode":{"title":"Postalcode","type":"string"},"country":{"title":"Country","type":"string"},"phone":{"title":"Phone","type":"string"},"electronicMailAddress":{"title":"Electronicmailaddress","type":"string"},"onlineUrl":{"title":"Onlineurl","type":"string"},"userID":{"title":"Userid","type":"string"}},"description":"A person for EML metadata."},"EMLProject":{"title":"EMLProject","required":["title","personnel"],"type":"object","properties":{"title":{"title":"Title","type":"string"},"identifier":{"title":"Identifier","type":"string"},"personnel":{"title":"Personnel","type":"array","items":{"$ref":"#/components/schemas/EMLAssociatedPerson"}},"description":{"title":"Description","type":"string"},"funding":{"title":"Funding","type":"string"},"studyAreaDescription":{"title":"Studyareadescription","type":"string"},"designDescription":{"title":"Designdescription","type":"string"}},"description":"EML method - unused"},"EMLTaxonomicClassification":{"title":"EMLTaxonomicClassification","required":["taxonRankName","taxonRankValue"],"type":"object","properties":{"taxonRankName":{"title":"Taxonrankname","type":"string"},"taxonRankValue":{"title":"Taxonrankvalue","type":"string"},"commonName":{"title":"Commonname","type":"string"}},"description":"EML metadata coverage - taxonomic"},"EMLTemporalCoverage":{"title":"EMLTemporalCoverage","type":"object","properties":{"singleDateTime":{"title":"Singledatetime","type":"string"},"beginDate":{"title":"Begindate","type":"string"},"endDate":{"title":"Enddate","type":"string"}},"description":"EML metadata coverage - temporal\n Use ISO 8601"},"EMLTitle":{"title":"EMLTitle","required":["title"],"type":"object","properties":{"title":{"title":"Descriptive title(s) - not too short","type":"string"},"lang":{"title":"Title language, ISO-639.2","type":"string","default":"eng"}},"description":"EML title with optional lang."},"EMODNetExportReq":{"title":"EMODNetExportReq","required":["meta","project_ids"],"type":"object","properties":{"meta":{"$ref":"#/components/schemas/EMLMeta"},"project_ids":{"title":"The projects to export","minItems":1,"type":"array","items":{"type":"integer"}}},"description":"EMODNet format export request."},"EMODNetExportRsp":{"title":"EMODNetExportRsp","required":["task_id"],"type":"object","properties":{"task_id":{"title":"The created task","type":"integer"}},"description":"EMODNet format export response."},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"ImportPrepReq":{"title":"ImportPrepReq","required":["task_id","source_path"],"type":"object","properties":{"task_id":{"title":"The existing task to use","type":"integer"},"source_path":{"title":"Source path on server, to zip or plain directory","type":"string"},"taxo_mappings":{"title":"Optional taxonomy mapping","type":"object","additionalProperties":{"type":"string"},"default":{}},"skip_loaded_files":{"title":"Skip Loaded Files","type":"boolean","default":false},"skip_existing_objects":{"title":"Skip Existing Objects","type":"boolean","default":false},"update_mode":{"title":"Update data ('Yes'), including classification ('Cla')","type":"string","default":""}},"description":"Import preparation, request. "},"ImportPrepRsp":{"title":"ImportPrepRsp","required":["source_path"],"type":"object","properties":{"source_path":{"title":"Eventually amended source path on server","type":"string"},"mappings":{"title":"Fields mapping","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}},"default":{}},"found_users":{"title":"Users found in TSV files","type":"object","additionalProperties":{"type":"object"},"description":"key = user name; value = dict with (key = 'id' if resolved, else 'email')","default":{}},"found_taxa":{"title":"Taxa found without ID in TSV files","type":"object","additionalProperties":{"type":"integer"},"description":"key = taxon NAME; value = taxon ID if resolved, else None","default":{}},"warnings":{"title":"Warnings from analysis","type":"array","items":{"type":"string"},"default":[]},"errors":{"title":"Errors from analysis","type":"array","items":{"type":"string"},"description":"Do NOT proceed to real import if not empty.","default":[]},"rowcount":{"title":"Number of TSV rows, counted during validation","type":"integer","default":0}},"description":"Import preparation, response. "},"ImportRealReq":{"title":"ImportRealReq","required":["task_id","source_path"],"type":"object","properties":{"task_id":{"title":"The existing task to use","type":"integer"},"source_path":{"title":"Source path on server, to plain directory","type":"string"},"taxo_mappings":{"title":"Optional taxonomy mapping","type":"object","additionalProperties":{"type":"string"},"default":{}},"skip_loaded_files":{"title":"Skip Loaded Files","type":"boolean","default":false},"skip_existing_objects":{"title":"Skip Existing Objects","type":"boolean","default":false},"update_mode":{"title":"Update data ('Yes'), including classification ('Cla')","type":"string","default":""},"mappings":{"title":"Fields mapping","type":"object","additionalProperties":{"type":"object","additionalProperties":{"type":"string"}},"default":{}},"found_users":{"title":"Users found in TSV files","type":"object","additionalProperties":{"type":"object"},"description":"key = user name; value = dict with (key = 'id' if resolved, else 'email')","default":{}},"found_taxa":{"title":"Taxa found in TSV files","type":"object","additionalProperties":{"type":"integer"},"description":"key = taxon NAME; value = taxon ID if resolved, else None","default":{}},"rowcount":{"title":"Number of TSV rows, counted during validation","type":"integer","default":0}},"description":"Import for real, request. "},"ImportRealRsp":{"title":"ImportRealRsp","type":"object","properties":{},"description":"Import for real, response. "},"SimpleImportReq":{"title":"SimpleImportReq","required":["task_id","source_path","values"],"type":"object","properties":{"task_id":{"title":"The existing task to use, if 0 then it's a dry run","type":"integer"},"source_path":{"title":"Source path on server, to zip or plain directory","type":"string"},"values":{"title":"Constant values to write for all images, None to ignore.","type":"object","additionalProperties":{"type":"string"}},"possible_values":{"title":"Possible Values","type":"array","items":{},"default":["imgdate","imgtime","latitude","longitude","depthmin","depthmax","taxolb","userlb","status"]}},"description":"Simple Import preparation, request. "},"SimpleImportRsp":{"title":"SimpleImportRsp","required":["errors","nb_images"],"type":"object","properties":{"errors":{"title":"Validation, copy or insert errors","type":"array","items":{"type":"string"}},"nb_images":{"title":"Number of successfully imported images","type":"integer"}},"description":"Simple Import, response. "},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"type":"string"}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}}}}